---
- name: <r_net_names_t_common> disable consistent network device naming
  template:
    src: grub.j2
    dest: /etc/default/grub
    owner: root
    group: root
    mode: "0644"
    #validate:
    #backup: yes
  vars:
    origin_cmdline: "{{ lookup('ini', 'GRUB_CMDLINE_LINUX type=properties file=/etc/default/grub') }}"
    grub_net_cmd:
      - net.ifnames=0
      - biosdevname=0

- name: <r_net_names_t_common> rebuild the grub configuration file
  command:
  #become: yes
  #become_method: su
  #become_user:
  #become_flags: "-s /bin/sh"
  args:
    cmd: grub2-mkconfig -o /etc/grub2.cfg
    #chdir:
    # A filename or (since 2.0) glob pattern.
    # If it already exists, this step *won't* be run.
    #creates:

    # A filename or (since 2.0) glob pattern.
    # If it already exists, this step *will* be run.
    #remove:

- name: "<r_net_names_t_common> remove /etc/sysconfig/network-scripts/ifcfg-{{ ansible_facts['interfaces'][1] }}"
  file:
    path: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_facts['interfaces'][1] }}"
    state: absent

- name: <r_net_names_t_common> copy a file to /etc/sysconfig/network-scripts/
  copy:
    # if path ends with "/", only inside contents of that
    # directory are copied to destination.
    # if it does not end with "/", the directory itself
    # with all contents is copied.
    src: ifcfg-eth0
    dest: /etc/sysconfig/network-scripts/
    owner: root
    group: root
    mode: "0644"
    #backup: yes
    # The validation command to run before copying into place.
    # E.g. `validate: /usr/sbin/visudo -csf %s`
    #validate:
