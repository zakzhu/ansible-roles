---
- name: "<r_get_pkg_t_common> calculate checksum of {{ package_tarball }}"
  command:
  #become: yes
  #become_method: su
  #become_user:
  #become_flags: "-s /bin/sh"
  args:
    cmd: "openssl dgst -{{ dgst_algo }} /tmp/{{ package_tarball }}"
    #chdir:
    # A filename or (since 2.0) glob pattern.
    # If it already exists, this step *won't* be run.
    #creates:

    # A filename or (since 2.0) glob pattern.
    # If it already exists, this step *will* be run.
    #remove:
  register: checksum_result

- name: "<r_get_pkg_t_common> verify checksum of {{ package_tarball }}"
  fail:
    msg: "The package is corrupted, please try again!" # not required. The customized message used for failing execution. If omitted, fail will simply bail out with a generic message.
  when: checksum != package['checksum']
  vars:
    checksum: "{{ checksum_result['stdout'].split('= ')[1] }}"

- name: "<r_get_pkg_t_common> create directory /usr/local/install/{{ package_fullname }}"
  file:
    path: "/usr/local/install/{{ package_fullname }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: "<r_get_pkg_t_common> extract /tmp/{{ package_tarball }} into /usr/local/install/{{ package_fullname }}"
  unarchive:
    src: "/tmp/{{ package_tarball }}"
    dest: "/usr/local/install/{{ package_fullname }}"
    #owner:
    #group:
    #mode:
    # If the specified absolute path (file or directory) already
    # exists, this step will *not* be run.
    #creates:
